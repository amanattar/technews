# Generated by Django 4.2.7 on 2025-09-12 10:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('url', models.URLField()),
                ('source_type', models.CharField(choices=[('rss', 'RSS Feed'), ('manual', 'Manual Entry')], default='rss', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_scraped', models.DateTimeField(blank=True, null=True)),
                ('scrape_frequency', models.IntegerField(default=10)),
                ('priority_weight', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_keywords', models.JSONField(default=dict)),
                ('email_notifications', models.BooleanField(default=False)),
                ('daily_digest', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_sources', models.ManyToManyField(blank=True, to='news_aggregator.source')),
                ('preferred_tags', models.ManyToManyField(blank=True, to='news_aggregator.tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='news_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScrapingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrape_date', models.DateTimeField(auto_now_add=True)),
                ('articles_found', models.PositiveIntegerField(default=0)),
                ('articles_new', models.PositiveIntegerField(default=0)),
                ('articles_updated', models.PositiveIntegerField(default=0)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('duration_seconds', models.FloatField(default=0.0)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='news_aggregator.source')),
            ],
            options={
                'ordering': ['-scrape_date'],
            },
        ),
        migrations.CreateModel(
            name='ExportHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_date', models.DateTimeField(auto_now_add=True)),
                ('format_type', models.CharField(choices=[('csv', 'CSV'), ('json', 'JSON'), ('xml', 'XML')], default='csv', max_length=10)),
                ('filters_applied', models.JSONField(default=dict)),
                ('articles_count', models.PositiveIntegerField(default=0)),
                ('file_size_bytes', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-export_date'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('url', models.URLField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('published_date', models.DateTimeField()),
                ('scraped_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('priority_score', models.FloatField(default=0.0)),
                ('keyword_matches', models.JSONField(default=dict)),
                ('is_breaking', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('is_bookmarked', models.BooleanField(default=False)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news_aggregator.source')),
                ('tags', models.ManyToManyField(blank=True, related_name='articles', to='news_aggregator.tag')),
            ],
            options={
                'ordering': ['-priority_score', '-published_date'],
                'indexes': [models.Index(fields=['-priority_score', '-published_date'], name='news_aggreg_priorit_d48fc8_idx'), models.Index(fields=['-scraped_date'], name='news_aggreg_scraped_ff0834_idx'), models.Index(fields=['source', '-published_date'], name='news_aggreg_source__1f809c_idx')],
            },
        ),
    ]