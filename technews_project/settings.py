"""
Django settings for technews_project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-=x#_%1(c=_1v1j^p)=)t)w35a0@a7&#461vs-##z68+t&s17tx')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True').lower() == 'true'

# Railway handles domain routing, but you can be more specific if needed
ALLOWED_HOSTS = ['*']  # Railway provides the domain


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'django_celery_beat',
    'news_aggregator',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add for static files serving
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'technews_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'technews_project.wsgi.application'


# Database
# Railway automatically provides DATABASE_URL for PostgreSQL
if os.environ.get('DATABASE_URL'):
    DATABASES = {
        'default': dj_database_url.parse(os.environ.get('DATABASE_URL'))
    }
else:
    # Fallback for local development
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# Updated for Railway deployment
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # For production

# For development, keep your existing STATICFILES_DIRS
if not os.environ.get('DATABASE_URL'):  # Only for local development
    STATICFILES_DIRS = [
        BASE_DIR / "news_aggregator" / "static",
    ]

# WhiteNoise configuration for static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

# CORS Configuration - Updated for Railway
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

# Add your Railway domain when you get it
RAILWAY_DOMAIN = os.environ.get('RAILWAY_STATIC_URL', '')
if RAILWAY_DOMAIN:
    CORS_ALLOWED_ORIGINS.append(f"https://{RAILWAY_DOMAIN}")

# Celery Configuration - Updated for Railway
REDIS_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379/0')

CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


# RSS Feed Sources
RSS_FEEDS = {
    'techcrunch': 'https://techcrunch.com/feed/',
    'theverge': 'https://www.theverge.com/rss/index.xml',
    'android_authority': 'https://www.androidauthority.com/feed/',
    'gsmarena': 'https://www.gsmarena.com/rss-news-reviews.php3',
    'macrumors': 'https://www.macrumors.com/macrumors.xml',
}

# Keyword Priority Configuration
KEYWORD_PRIORITIES = {
    # High priority - leaks and exclusives
    "leak": "high", "leaked": "high", "rumor": "high", "rumors": "high", 
    "spotted": "high", "exclusive": "high", "breaking": "high", 
    "confirmed": "high", "reveals": "high", "insider": "high", 
    "tipster": "high", "sources": "medium",
    
    # Medium priority - product launches
    "launch": "medium", "announced": "medium", "unveils": "medium", 
    "releases": "medium", "official": "medium", "debut": "medium", 
    "arriving": "medium", "coming": "low",
    
    # Device specific (high priority)
    "iphone": "high", "samsung": "medium", "galaxy": "medium", 
    "pixel": "high", "oneplus": "medium", "xiaomi": "medium", 
    "huawei": "medium", "oppo": "medium", "vivo": "medium", 
    "realme": "medium", "nothing": "medium", "motorola": "low", 
    "sony": "low",
    
    # Tech categories
    "smartphone": "medium", "phone": "low", "laptop": "low", 
    "tablet": "low", "wearable": "low", "earbuds": "low", 
    "processor": "low", "chip": "low", "camera": "low", 
    "display": "low", "battery": "low", "5g": "low", "6g": "medium",
    "ai": "low", "chipset": "low", "specs": "low", "benchmark": "low",
    
    # Tech events
    "ces": "high", "mwc": "high", "wwdc": "high", "google i/o": "high", 
    "keynote": "medium", "event": "low", "conference": "low"
}

# Google Service Account Configuration
GOOGLE_APPLICATION_CREDENTIALS = os.getenv('GOOGLE_APPLICATION_CREDENTIALS', '')

# Gemini AI Configuration
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY', os.getenv('GOOGLE_API_KEY', ''))

# Security settings for production
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True